/**********************************************************************************************************************
 *  FILE DESCRIPTION
 *  -------------------------------------------------------------------------------------------------------------------
 *          File:  SWITCH.h
 *          Description:  
 *          Name: Mahmoud Shams El-Din
 *********************************************************************************************************************/
#ifndef HAL_SWITCH_SWITCH_H_
#define HAL_SWITCH_SWITCH_H_

/**********************************************************************************************************************
 * INCLUDES
 *********************************************************************************************************************/
 #include "LIB/std_types.h"
 #include "SWITCH_cfg.h"
 
/**********************************************************************************************************************
 *  GLOBAL CONSTANT MACROS
 *********************************************************************************************************************/

/************************************************************************************
 * Description: 
 ************************************************************************************/
#define SWITCH_INPUT_PU 1
#define SWITCH_INPUT_PD 0

#define SWITCH_PRESSED 1
#define SWITCH_NOT_PRESSED 0

/************************************************************************************
 * Description: Switch configurations 
 ************************************************************************************/
typedef struct{
	void* SWITCH_Port;
	u32 SWITCH_Pin;
	u32 SWITCH_Mode;
}SWITCH_cfg_t;

/************************************************************************************
 * Description: Error Status
 ************************************************************************************/
typedef enum
{
	SWITCH_OK,
	SWITCH_InvalidSwitch,
	SWITCH_NULLPTR
}SWITCH_ERRORSTATUS_t;
/**********************************************************************************************************************
 *  GLOBAL FUNCTION MACROS
 *********************************************************************************************************************/


/**********************************************************************************************************************
 *  GLOBAL DATA TYPES AND STRUCTURES
 *********************************************************************************************************************/


/**********************************************************************************************************************
 *  GLOBAL DATA PROTOTYPES
 *********************************************************************************************************************/

 
/**********************************************************************************************************************
 *  GLOBAL FUNCTION PROTOTYPES
 *********************************************************************************************************************/

/************************************************************************************
 * Service Name: SWITCH_Init
 * Service ID[hex]: 0x10
 * Sync/Async: Synchronous
 * Reentrancy: Non reentrant
 * Parameters (in):  None
 * Parameters (out): SWITCH_ERRORSTATUS_t :
 *         - SWITCH_OK
 *         - GPIO_ERRORStatus
 * Return value: 
 * Description: Initializes the SWITCH according to external SWITCH configuration.
 ************************************************************************************/

SWITCH_ERRORSTATUS_t SWITCH_Init(void);

/************************************************************************************
 * Service Name: SWITCH_GetStatus
 * Service ID[hex]: 0x10
 * Sync/Async: Synchronous
 * Reentrancy: Non reentrant
 * Parameters (in):  - Copy_SWITCH: The name of the SWITCH whose status will be set.
 *         - Copy_Status: The status of the SWITCH (SWITCH_PRESSED, SWITCH_NOT_PRESSED).
 * Parameters (out): SWITCH_ERRORSTATUS_t:
 *         - SWITCH_OK
 *         - SWITCH_InvalidSwitch
 *         - SWITCH_NULLPTR
 *         - GPIO_ERRORStatus
 * Return value: 
 * Description: Sets the status of the specified SWITCH.
 ************************************************************************************/

SWITCH_ERRORSTATUS_t SWITCH_GetStatus(u32 Copy_SWITCH, u8* Copy_Status);
	


#endif  /* HAL_SWITCH_SWITCH_H_ */

/**********************************************************************************************************************
 *  END OF FILE: SWITCH.h
 *********************************************************************************************************************/
